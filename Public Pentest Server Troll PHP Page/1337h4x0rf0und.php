<?php
	#
	#   Due Diligence Test
	#     This page is solely to see if a 3rd party assessor is paying attention to their tools 
	#	  This will trigger "EXTERNAL INTERACTIONS" and if they read them carefully, it will be a 
	#     unique request for each lyric. 
	#    
	#   If they are paying attention, they'll laugh and mark FP. If you get a "HIGH RISK" finding back
	#	  it might be a good coaching opportunity. 
	#
	#   Forward requests with burpcollaborator\.net|oastify\.com in any headers, cookies, or parameters to this page using an htaccess file.
	#
    header("HTTP/1.1 200 OK"); 
    header("Set-Cookie: UnauthorizedRequest-CeaseAndDesist=true");
    header("Set-Cookie: H4x0r3d1337pwn=true"); 
    function burpcollabfinder($teststr){
        $tempstr0=str_replace("X;","",$teststr);
        $tempstr1=urldecode($tempstr0);
        $tempstr2=str_replace("\\", "", $tempstr1);
        preg_match('/[a-zA-Z0-9]{25,45}\.(burpcollaborator\.net|oastify\.com)/', $tempstr2, $tempstr4, PREG_OFFSET_CAPTURE);
        return  $tempstr4[0][0] ;
    }
    function rickrollrequests($url){
        $rickroll=array("Never", "gonna", "give", "you", "up", 
        "Never", "gonna", "let", "you", "down", 
        "Never", "gonna", "run", "around", 
        "and", "desert", "you", 
        "Never", "gonna", "make", "you", "cry", 
        "Never", "gonna", "say", "goodbye", 
        "Never", "gonna", "tell", "a", "lie", 
        "and", "hurt", "you");
		$i=0
        foreach ($rickroll as $lyric){
            curl_get_request($url . "/" . $lyric, $i);
            echo "<h6>Sent request to " . $url . "/" . $lyric . "</h6>";
            if ($i < 4){
                $i++;
            } else {
                $i=0;
            }
        }
    }
    function curl_get_request($url, $i){
        $httpreq = curl_init($url);
	switch ($i){
		case 0: curl_setopt($httpreq, CURLOPT_OPTIONS, true); $i++; break;
		case 1: curl_setopt($httpreq, CURLOPT_POST, true); $i++; break;
		case 2: curl_setopt($httpreq, CURLOPT_HEAD, true); $i++; break;
                case 3: curl_setopt($httpreq, CURLOPT_PUT, true); $i++; break;
		case 4: curl_setopt($httpreq, CURLOPT_HTTPGET, true); $i=0; break;
	}
	curl_setopt($httpreq, CURLOPT_RETURNTRANSFER, false);
	$httpresponse = curl_exec($httpreq); 
	$httpcode = curl_getinfo($httpreq, CURLINFO_HTTP_CODE);
    }
?>
<!doctype HTML>
<html>
    <head>
        <title>1337 H4x0r D3t3ct3d</title>
    </head>
    <body>
	<img src="/images/okay.gif"/> <?php #https://gifdb.com/images/file/ok-blank-stare-o68cm514y6xliyxs.gif ?>
	<br/>
	<?php
		if (strlen(burpcollabfinder($_SERVER['REQUEST_URI'])) > 30){
                	echo "<h4>1337 H4x0r D3t3ct3d!!!</h4>";
                	rickrollrequests(burpcollabfinder($_SERVER['REQUEST_URI']));
		}
        ?>
    </body>
</html>
